repos:
  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: name-tests-test
        exclude: run_unit_tests.py

  # Secret scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Docstring formatting (runs before code formatting)
  - repo: https://github.com/PyCQA/docformatter
    rev: v1.7.7
    hooks:
      - id: docformatter
        args:
          [
            "--in-place",
            "--recursive",
            "--wrap-summaries=88",
            "--wrap-descriptions=88",
            "--style=google",
            "--black",
          ]

  # Code formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        args: [--skip-string-normalization]

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort

  # Linting
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.12.7
    hooks:
      - id: ruff
        args: [--fix]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        additional_dependencies:
          - fastapi
          - pydantic>=2.0.0
          - pydantic-settings
          - sqlalchemy
          - starlette
          - types-python-dateutil
          - types-beautifulsoup4
          - types-PyYAML
          - types-redis
          - pytest

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ['--exclude', 'tests']
        exclude: ^tests/

  # Dependency vulnerability scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.4.2
    hooks:
      - id: python-safety-dependencies-check

  # Documentation
  - repo: https://github.com/jsh9/pydoclint
    rev: 0.6.7
    hooks:
      - id: pydoclint
        args: ["--style", "google"]

  # Spell checking
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        args: [--write-changes]
        exclude: ^(.*\.lock|.*\.log|htmlcov/.*)$
  # Conventional commit validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.6.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict]

  # Local hooks
  - repo: local
    hooks:
      # Python code quality checks
      - id: radon-cc
        name: radon complexity check
        entry: poetry run radon cc --min B
        language: system
        types: [python]
      - id: radon-mi
        name: radon maintainability check
        entry: poetry run radon mi --min B
        language: system
        types: [python]
      # Python testing
      # - id: pytest-check
      #   name: pytest-check
      #   entry: poetry run pytest --co -q
      #   language: system
      #   pass_filenames: false
      #   always_run: true
      # Python documentation generation
      - id: sphinx-docs-build
        name: sphinx-docs-build
        entry: |
          bash -c '
            poetry run sphinx-apidoc -o docs/source/ app/
            poetry run sphinx-build -b html docs/source docs/build
          '
        language: system
        pass_filenames: false
