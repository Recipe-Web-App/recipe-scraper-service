name: Coverage

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.13'
  COVERAGE_THRESHOLD: 80

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=app --cov-report=xml --cov-report=html --cov-report=term tests/

      - name: Check coverage threshold
        run: |
          COVERAGE=$(poetry run coverage report | grep TOTAL | awk '{print $NF}' | sed 's/%//')
          echo "Current coverage: ${COVERAGE}%"
          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
            echo "❌ Coverage ${COVERAGE}% is below the minimum threshold of ${COVERAGE_THRESHOLD}%"
            exit 1
          else
            echo "✅ Coverage ${COVERAGE}% meets the minimum threshold of ${COVERAGE_THRESHOLD}%"
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: always()
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage HTML report
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: coverage-html
          path: htmlcov/
          retention-days: 30

      - name: Comment PR with coverage
        uses: py-cov-action/python-coverage-comment-action@v3
        if: github.event_name == 'pull_request'
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MINIMUM_GREEN: 90
          MINIMUM_ORANGE: 80
